library(htmltools)
library(shiny)
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
?options
df = data.frame( c( 0, 1, 2, 3 ), c( 40, 49, 17, 42 ))
names(df) <- c("x","y")
df
df = data.frame(seq(4),runif(4))
?rPlot
library(rCharts)
?rPlot
rCharts::open_notebook()
rCharts::open_notebook()
a <- rCharts:::Highchart$new()
taula=data.frame(Freq=c(1,2,3,2,3,4),levelArea=c(1,2,3,4,8,9),levelSeveridad=c(1,1,1,1,1,1))
a <- hPlot(levelSeveridad ~ levelArea, data =taula, type = "bubble", title = "Data chart", size = "Freq" )
a$chart(zoomType = "xy")
a
?hPlot
??hPlot
hPlt
hPlot
Highcharts$new()
?Highcharts
hPlot
?hPlot
?rPlot
hPlot(Pulse ~ Height, data = MASS::survey, type = "scatter", group = "Exer")
a <- hPlot(Pulse ~ Height, data = MASS::survey, type = "bubble", title = "Zoom demo", subtitle = "bubble chart", size = "Age", group = "Exer")
a$chart(zoomType = "xy")
a$exporting(enabled = T)
a
n3 = nPlot(x = "Var1", y = "Freq", data = bpf3, type = "pieChart")
x <- data.frame(USPersonalExpenditure)
colnames(x) <- substr(colnames(x), 2, 5)
a <- rCharts:::Highchart$new()
a$chart(type = "line")
a <- Highchart$new(
)
a <- Highcharts$new()
a$chart(type = "line")
a$title(text = "US Personal Expenditure")
a$xAxis(categories = rownames(x))
a$yAxis(title = list(text = "Billions of dollars"))
a$data(x)
# Print chart
a$printChart()
a
a$data(x)
a
a <- hPlot(Pulse ~ Height, data = MASS::survey, type = 'scatter', group = 'Sex', radius = 6, group.na = "Not Available")
a$colors('rgba(223, 83, 83, .5)', 'rgba(119, 152, 191, .5)', 'rgba(60, 179, 113, .5)')
a$legend(align = 'right', verticalAlign = 'top', layout = 'vertical')
a$plotOptions(scatter = list(marker = list(symbol = 'circle')))
a$tooltip(formatter = "#! function() { return this.x + ', ' + this.y; } !#")
a
hPlot(freq ~ Exer, data = plyr::count(MASS::survey, c('Sex', 'Exer')), type = c('column', 'line'), group = 'Sex', radius = 6)
hPlot(freq ~ Exer, data = plyr::count(MASS::survey, c('Sex', 'Exer')), type = 'bar', group = 'Sex', group.na = 'NA\'s')
MASS
?count
?MASS
?survey
head(survey)
survey
library(plyr)
survey
??survey
?survey
df <- iris
df <- myCars
df <- mtCars
df <- mtcars
df
df$cyl <- as.factor(df$cyl)
df
str(cyl)
str(df)
?count
count(baseball[1:100,], vars = "id")
View(baseball)
table(baseball[1:100,"id"])
data.frame(table(baseball[1:100,"id"]))
?table
x <- c(1,1,1,2,2,3)
table(x)
count(x)
count(baseball[1:100,], vars = "id", wt_var = "g")
df
head(df)
x <- count(df, df$cyl)
x
str(df)
df <- mtcars
x <- count(df, df$cyl)
x
df$cyl
count(df,vars="cyl")
install.packages("MASS")
install.packages("MASS")
install.packages("~/Desktop/MASS_7.3-45.tgz", repos = NULL)
library(MASS)
?MASS
??MASS
fbeta
?fbeta
?survey
count(survey)
library(plyr)
count(survey)
x <- count(survey,c('sex','exer'))
x <- count(survey,c('Sex','Exer'))
head(survey)
str(survey)
x
df <- iris
str(df)
df <- mtcars
str(df)
head(Df)
head(df)
count(df,"vs")
df$cyl <- as.factor(df$cyl)
df$vs <- as.factor(df$vs)
dat <- count(df,c("cyl","vs"))
dat
x <- count(survey,c('Sex', 'Exer'))
head(X)
head(x)
hPlot(Pulse ~ Height, data = MASS::survey, type = "scatter", group = "Exer")
library(rCharts)
hPlot(Pulse ~ Height, data = MASS::survey, type = "scatter", group = "Exer")
hPlot( ~ , data = df, type = "scatter", group = "Exer")
head(Df)
head(df)
hPlot(mpg ~ disp, data = df, type = "scatter", group = "Exer")
head(df)
view(df)
View(df)
hPlot(mpg ~ disp, data = df, type = "scatter", group = "cyl")
a <- hPlot(Pulse ~ Height, data = MASS::survey, type = "bubble", title = "Zoom demo", subtitle = "bubble chart", size = "Age", group = "Exer")
a$chart(zoomType = "xy")
a$exporting(enabled = T)
a
a <- hPlot(Pulse ~ Height, data = MASS::survey, type = "bubble", title = "Zoom demo", subtitle = "bubble chart", size = "Age", group = "Exer")
a$chart(zoomType = "xy")
a
x <- data.frame(key = c("a", "b", "c"), value = c(1, 2, 3))
hPlot(x = "key", y = "value", data = x, type = "pie")
dat
tmp <- count(df,"cyl")
tmp
hPlot(x = "cyl", y = "freq", data = tmp, type="pie")
pie
pi
`a <- hPlot(Pulse ~ Height, data = MASS::survey, type = 'scatter', group = 'Sex', radius = 6, group.na = "Not Available")
a$colors('rgba(223, 83, 83, .5)', 'rgba(119, 152, 191, .5)', 'rgba(60, 179, 113, .5)')
a$legend(align = 'right', verticalAlign = 'top', layout = 'vertical')
a$plotOptions(scatter = list(marker = list(symbol = 'circle')))
a$tooltip(formatter = "#! function() { return this.x + ', ' + this.y; } !#")
a
a <- hPlot(Pulse ~ Height, data = MASS::survey, type = 'scatter', group = 'Sex', radius = 6, group.na = "Not Available")
a$colors('rgba(223, 83, 83, .5)', 'rgba(119, 152, 191, .5)', 'rgba(60, 179, 113, .5)')
a$legend(align = 'right', verticalAlign = 'top', layout = 'vertical')
a$plotOptions(scatter = list(marker = list(symbol = 'circle')))
a$tooltip(formatter = "#! function() { return this.x + ', ' + this.y; } !#")
a
hPlot(freq ~ Exer, data = plyr::count(MASS::survey, c('Sex', 'Exer')), type = c('column', 'line'), group = 'Sex', radius = 6)
a <- hPlot(freq ~ Exer, data = plyr::count(MASS::survey, c('Sex', 'Exer')), type = 'column', group = 'Sex', group.na = 'NA\'s')
a$plotOptions(column = list(dataLabels = list(enabled = T, rotation = -90, align = 'right', color = '#FFFFFF', x = 4, y = 10, style = list(fontSize = '13px', fontFamily = 'Verdana, sans-serif'))))
a$xAxis(labels = list(rotation = -45, align = 'right', style = list(fontSize = '13px', fontFamily = 'Verdana, sans-serif')), replace = F)
a
dat
dat <- rbind(dat,c(8,1,6))
dat
a <- hPlot(freq ~ Exer, data = plyr::count(MASS::survey, c('Sex', 'Exer')), type = 'bar', group = 'Sex', group.na = 'NA\'s')
a$plotOptions(bar = list(cursor = 'pointer', point = list(events = list(click = "#! function() { alert ('Category: '+ this.category +', value: '+ this.y); } !#"))))
a
a <- rCharts::Highcharts$new()
a$series(data = list(
list(y = 8, url = "https://github.com/metagraf/rHighcharts", color = "lightblue"),
list(y = 14, url = "https://github.com/metagraf/rVega", color = "lightpink"),
list(y = 71, url = "https://github.com/ramnathv/rCharts", color = "lightgreen")
), type = "column", name = "Number of Stars")
a$plotOptions(column = list(cursor = 'pointer', point = list(events = list(click = "#! function() { location.href = this.options.url; } !#"))))
a$xAxis(categories = c("rHighcharts", "rVega", "rCharts"), title = list(text = ""))
a$yAxis(title = list(text = ""))
a$legend(enabled = F)
a
setwd("~/workspace/git/r_workspace/slidify_learn")
rm(list=ls())
library(slidify)
