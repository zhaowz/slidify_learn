View(leaf2leaf.ratio)
leaf.ratio <- c()                #上三角展平
for(i in seq(leaf.unique.num-1))
{
for(j in seq(i+1,leaf.unique.num))
{
leaf2leaf.ratio[i,j] <- round(leaf2leaf[i,j]/min(sum(leaf2leaf[i,]),sum(leaf2leaf[j,])) ,3 )
leaf2leaf.ratio[j,i] <- leaf2leaf.ratio[i,j]
leaf.ratio <- c(leaf.ratio,leaf2leaf.ratio[i,j])
}
}
rm(i,j,p,cur_topic,cur_len,j_index,p_index,leaf.unique.num)
leaf.ratio <- data.frame(leaf.ratio)
ggplot(leaf.ratio,aes(leaf.ratio))+geom_histogram(binwidth=1)
View(leaf.ratio)
leaf.ratio <- c()                #上三角展平
for(i in seq(leaf.unique.num-1))
{
for(j in seq(i+1,leaf.unique.num))
{
leaf2leaf.ratio[i,j] <- round(leaf2leaf[i,j]/min(sum(leaf2leaf[i,]),sum(leaf2leaf[j,])) ,3 )
leaf2leaf.ratio[j,i] <- leaf2leaf.ratio[i,j]
leaf.ratio <- c(leaf.ratio,leaf2leaf.ratio[i,j])
}
}
rm(i,j,p,cur_topic,cur_len,j_index,p_index,leaf.unique.num)
#比例展平，做直方图
leaf.ratio <- data.frame(leaf.ratio)
leaf.unique.num <-nrow(topkleaf_all)
leaf.ratio <- c()                #上三角展平
for(i in seq(leaf.unique.num-1))
{
for(j in seq(i+1,leaf.unique.num))
{
leaf2leaf.ratio[i,j] <- round(leaf2leaf[i,j]/min(sum(leaf2leaf[i,]),sum(leaf2leaf[j,])) ,3 )
leaf2leaf.ratio[j,i] <- leaf2leaf.ratio[i,j]
leaf.ratio <- c(leaf.ratio,leaf2leaf.ratio[i,j])
}
}
rm(i,j,p,cur_topic,cur_len,j_index,p_index,leaf.unique.num)
#比例展平，做直方图
leaf.ratio <- data.frame(leaf.ratio)
ggplot(leaf.ratio,aes(leaf.ratio))+geom_histogram(binwidth=1)
ggplot(leaf.ratio,aes(leaf.ratio))+geom_histogram(binwidth=0.01)
ggplot(leaf.ratio,aes(leaf.ratio))+geom_histogram(binwidth=0.01)+xlim(0.0001,0.23)
feature.word<- sapply(feature,function(o) o[1:n,5])   # 所有叶子中top_n相关（n=10），lv2描述
topkleaf_all <-as.data.frame(table(matrix(feature.word,nrow=500) ) )  #展平，所有叶子以及index
topkleaf_all <- topkleaf_all[order(topkleaf_all[,2],decreasing = T),]
row.names(topkleaf_all) <- NULL
# write.csv(file='top50_10_lv2_desc.csv',topkleaf_all)
leaf.unique.num <-nrow(topkleaf_all)
leaf2leaf <- matrix(rep(0,leaf.unique.num*leaf.unique.num),nrow=leaf.unique.num)#任意两个leaf一起出现次数
for(i in seq(k))
{
cur_topic <- unique(feature.word[,i])   #当前topic的词语
cur_len <- length(cur_topic)
if(cur_len==1)                #只有一个词的topic
{
next
}
for(j in seq(cur_len-1) )
{
for( p in seq(j+1,cur_len) )
{
j_index <- which(topkleaf_all[,1]==cur_topic[j])   #第j个词在词向量中的位置，leaf2leaf用
p_index <- which(topkleaf_all[,1]==cur_topic[p])
leaf2leaf[j_index,p_index]=leaf2leaf[j_index,p_index]+1
leaf2leaf[p_index,j_index]=leaf2leaf[j_index,p_index]
}
}
}
row.names(leaf2leaf) <- as.character(topkleaf_all[,1])
#计算出现比例
leaf2leaf.ratio <- leaf2leaf
leaf.ratio <- c()                #上三角展平
for(i in seq(leaf.unique.num-1))
{
for(j in seq(i+1,leaf.unique.num))
{
leaf2leaf.ratio[i,j] <- round(leaf2leaf[i,j]/min(sum(leaf2leaf[i,]),sum(leaf2leaf[j,])) ,3 )
leaf2leaf.ratio[j,i] <- leaf2leaf.ratio[i,j]
leaf.ratio <- c(leaf.ratio,leaf2leaf.ratio[i,j])
}
}
rm(i,j,p,cur_topic,cur_len,j_index,p_index,leaf.unique.num)
View(leaf2leaf.ratio)
leaf.ratio <- data.frame(leaf.ratio)
ggplot(leaf.ratio,aes(leaf.ratio))+geom_histogram(binwidth=0.01)+xlim(0.0001,0.23)
ggplot(leaf.ratio,aes(leaf.ratio))+geom_histogram(binwidth=0.05)
ggplot(leaf.ratio,aes(leaf.ratio))+geom_histogram(binwidth=0.02)
View(feature.word)
View(leaf.ratio)
View(leaf2leaf.ratio)
rm(leaf2leaf.ratio)
feature.word.identityVec <- matrix(rep(0,leaf.unique.num*leaf.unique.num),nrow=leaf.unique.num)
leaf.unique.num <-nrow(topkleaf_all)
feature.word.identityVec <- matrix(rep(0,leaf.unique.num*leaf.unique.num),nrow=leaf.unique.num)
for(i in seq(k))
{
for(j in seq(n))
{
cur_index <- which(topkleaf_all==feature.word[i,j])
feature.word.identityVec[i,cur_index]=feature.word.identityVec[i,cur_index]+1
}
}
for(i in seq(k))
{
for(j in seq(n))
{
cur_index <- which(topkleaf_all==feature.word[j,i])
feature.word.identityVec[i,cur_index]=feature.word.identityVec[i,cur_index]+1
}
}
for(i in seq(k))
{
for(j in seq(n))
{
cur_index <- which(topkleaf_all==feature.word[j,i])
feature.word.identityVec[cur_index,i]=feature.word.identityVec[cur_index,i]+1
}
}
View(feature.word)
i <- 1
j <- 1
cur_index <- which(topkleaf_all==feature.word[j,i])
View(feature.word)
View(topkleaf_all)
for(i in seq(k))
{
for(j in seq(n))
{
cur_index <- which(topkleaf_all[,1]==feature.word[j,i])
feature.word.identityVec[cur_index,i]=feature.word.identityVec[cur_index,i]+1
}
}
i <- 1
j <- 1
which(topkleaf_all[,1]==feature.word[j,i])
View(feature.word.identityVec)
feature.word.identityVec <- matrix(rep(0,leaf.unique.num*leaf.unique.num),nrow=leaf.unique.num)
for(i in seq(k))
{
for(j in seq(n))
{
cur_index <- which(topkleaf_all[,1]==feature.word[j,i])
if(sum(cur_index)==0)
{
print(i,j)
}
feature.word.identityVec[cur_index,i]=feature.word.identityVec[cur_index,i]+1
}
}
feature.word.identityVec <- matrix(rep(0,leaf.unique.num*leaf.unique.num),nrow=leaf.unique.num)
for(i in seq(k))
{
for(j in seq(n))
{
cur_index <- which(topkleaf_all[,1]==feature.word[j,i])
if(cur_index<1 | cur_index>14)
{
print(i,j)
}
feature.word.identityVec[cur_index,i]=feature.word.identityVec[cur_index,i]+1
}
}
feature.word.identityVec <- matrix(rep(0,leaf.unique.num*k),nrow=leaf.unique.num)
for(i in seq(k))
{
for(j in seq(n))
{
cur_index <- which(topkleaf_all[,1]==feature.word[j,i])
if(cur_index<1 | cur_index>14)
{
print(i,j)
}
feature.word.identityVec[cur_index,i]=feature.word.identityVec[cur_index,i]+1
}
}
View(feature.word.identityVec)
sum(feature.word.identityVec[1,])
sum(feature.word.identityVec[2,])
sum(feature.word.identityVec[3,])
sum(feature.word.identityVec[14,])
sum(feature.word.identityVec[13,])
View(feature.word.identityVec)
df <- data.frame(t(feature.word.identityVec))
View(df)
names(df) <- row.names(topkleaf_all)
View(df)
names(df) <- topkleaf_all[,1]
View(df)
?princomp
pc <- princomp(df,cor=T,scores = T)
summary(pc)
plot(pc,type="lines")
install.packages("scatterplot3d")
library(scatterplot3d)
?scatterplot3d
install.packages("rgl")
library(rgl)
?plot3d
open3d()
x <- sort(rnorm(1000))
y <- rnorm(1000)
z <- rnorm(1000) + atan2(x,y)
plot3d(x, y, z, col=rainbow(1000))
open3d()
x <- sort(rnorm(1000))
y <- rnorm(1000)
z <- rnorm(1000) + atan2(x,y)
plot3d(x, y, z, col=rainbow(1000))
detach("package:scatterplot3d", unload=TRUE)
setwd("~/workspace/alibaba/rodps")
?kmeans
cl <- kmeans(df,3)
df$cluster <- as.factor(cl$cluster)
View(df)
df.low <- data.frame(pc$scores[,1:3],df$cluster)
View(df.low)
View(df.low)
topic_cluster.r
open3d()
plot3d(df.low$comp1,df.low$comp2,df.low$comp3,col=df.low$cluster)
open3d()
plot3d(x, y, z, col=rainbow(1000))
View(df.low)
View(df.low)
names(df.low) <- c('comp1','comp2','comp3','cluster')
View(df.low)
open3d()
plot3d(df.low$comp1,df.low$comp2,df.low$comp3,col=df.low$cluster)
rm(i,j,x,y,z)
rm(pc)
rm(cur_index)
rm(cl)
View(df)
index <- seq(14)
for(i in seq(49))
{}
for(i in seq(49))
{index <- c(index,seq(14))}
source('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df)
debugSource('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df)
View(df)
merge_pic(df[,1:14])
debugSource('~/workspace/alibaba/rodps/merge_pic.R')
debugSource('~/workspace/alibaba/rodps/merge_pic.R')
debugSource('~/workspace/alibaba/rodps/merge_pic.R')
debugSource('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
View(dat)
debugSource('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
debugSource('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
?melt
x <- melt(df)
melt()
library(reshape2)
x <- melt(df)
View(x)
x <- melt(df[,1:14])
View(x)
View(df)
class(Df)
class(df)
str(df)
x <- melt(t(df[,1:14]))
View(x)
source('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
View(dt)
str(dt)
ggplot(dat,aes(x=leaf_cati))+
geom_area(aes(y=dt,group=as.factor(group)),fill='blue',alpha=.2,position=dodge)
ggplot(dt,aes(x=leaf_cati))+
geom_area(aes(y=dt,group=as.factor(group)),fill='blue',alpha=.2,position=dodge)
source('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
merge_pic(df[,1:14])
View(dt)
debugSource('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
ggplot(dt,aes(x=index))+
geom_area(aes(y=value,group=as.factor(group)),fill='blue',alpha=.2,position='dodge')
+scale_x_continuous(breaks=seq(nfeature),lables=dt$leaf_cati[1:nfeature])
labels <- dt$leaf_cati[1:nfeature]
merge_pic(df[,1:14])
debugSource('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
debugSource('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
debugSource('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
debugSource('~/workspace/alibaba/rodps/merge_pic.R')
source('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
source('~/workspace/alibaba/rodps/merge_pic.R')
source('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
source('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
source('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
source('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
source('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
source('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
source('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
source('~/workspace/alibaba/rodps/merge_pic.R')
source('~/workspace/alibaba/rodps/merge_pic.R')
merge_pic(df[,1:14])
install.packages("sqldf")
rm(i)
rm(x)
?word2vec
??word2vec
install.packages("tmcn")
install.packages("tmcn", repos="http://R-Forge.R-project.org")
?sample
sample
sample.int
.Internal
.Primitive(".Internal")
?sample.int
install.packages("magrittr")
install.packages("magrittr")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("magrittr")
install.packages("magrittr")
m<-matrix(c(1:4,1,4,1:6),ncol=3)
m
c(1:4,1,4,1:6)
apply(m,1,mean)
apply(m,2,mean)
library(plyr)
aaplr(m,1,mean)
aaply(m,1,mean)
?aaply
hear(cars)
head(cars)
aaply(head(cars),1,mean)
df <- head(cars)
aaply(df,1,mean)
dim(ozone
)
head(ozone)
View(ozone)
class(ozone)
?array
array(1:3, c(2,4))
dim(as.array(letters))
?ddply
dfx <- data.frame(
group = c(rep('A', 8), rep('B', 15), rep('C', 6)),
sex = sample(c("M", "F"), size = 29, replace = TRUE),
age = runif(n = 29, min = 18, max = 54)
)
dfx
rep('A',8)
setwd("~/workspace/r/R学习")
install.packages("rmarkdown")
install.packages("shiny")
library(rmarkdown)
dfx <- data.frame(
group = c(rep('A', 8), rep('B', 6), rep('C', 9)),
sex   = sample(c('M', 'F'), size = 29, replace = T),
age   = runif(n = 29, min = 18, max = 54)
)
install.packages("shiny")
install.packages("shiny")
library(shiny)
library(shiny)
install.packages("htmltools")
install.packages("htmltools")
install.packages("htmltools")
rm(list=ls())
install.packages("htmltools")
install.packages("htmltools")
library(plyr)
dfx <- data.frame(         #生成数据
group = c(rep('A', 8), rep('B', 15), rep('C', 6)),
sex   = sample(c('M', 'F'), size = 29, replace = T),
age   = runif(n = 29, min = 18, max = 54)
)
dfx
ddply(dfx, .(group, sex), summarize,
mean = round(mean(age), 2),
sd = round(sd(age), 2))
ddply(dfx, .(group, sex),
mean = round(mean(age), 2),
sd = round(sd(age), 2))
ddply(dfx, .(group, sex), summarize,
mean = round(mean(age), 2),
sd = round(sd(age), 2))
ddply(dfx, .(group, sex), summarize)
?summarise
summarise(dfx)
baseball
View(baseball)
summarise(baseball,
duration = max(year) - min(year),
nteams = length(unique(team)))
summary(baseball)
x <- head(baseball)
x
summarise(x,g=max(g)-min(g))
x
df <- ddply(baseball,"id")
View(df)
df <- ddply(baseball, "id", summarise,    #按id分组，分组后每组数据进行汇总
duration = max(year) - min(year),
nteams = length(unique(team)))
head(df)
dfx
x <- baseball[1:100,]
x[,"year"=1871 & 'team'='CL1']
x[,"year"=1871 && 'team'='CL1']
x[,"year"=1871]
View(x)
x[,year=1871]
x[,"year"]=1871
x
x <- baseball[1:100,]
x[x[,"year"]==1871 & x[,"team"]=='CL1',]
rbi <- ddply(baseball, .(year), summarise,
mean_rbi = mean(rbi, na.rm = TRUE))
head(rbi)
head(baseball)
plot(mean_rbi ~ year, type = "l", data = rbi)
base2 <- ddply(baseball, .(id), mutate,   # 原始数据上产生新的变量
career_year = year - min(year) + 1)
base2 <- ddply(baseball, .(id), mutate,career_year = year - min(year) + 1)
base2 <- ddply(baseball, .(id), mutate,career_year = year - min(year) + 1)
?mutate
x <- head(airquality)
x
mutate(x,X=-x)
mutate(airquality, new = -Ozone, Temp = (Temp - 32) / 1.8)
mutate(x,X=-x, Temp =(Temp -32)/1.8 )
mutate(x,X=-x)
mutate(x,X=-x, Temp =(Temp -32)/1.8 ,X.Temp=3)
mutate(x,X=-x, Temp =(Temp -32)/1.8 ,X=3)
system.time(rep(10,100000))
system.time(rep(10,10000000000))
system.time(rep(10,10000000))
system.time(seq(10,10000000))
df <- data.frame(id = rep(letters[1:3], each = 3),
value = 1:9)
df
ddply(df, .(id), mutate, mean = mean(value))
model <- function(x) {
lm(Petal.Length~Petal.Width,data=x)  # 首先定义回归函数
}
pieces <- split(iris,list(iris$Species))
pieces[[1]]
models <- lapply(pieces,model)            # 每个品种应用回归模型
models[[1]]
models[[2]]
models[[3]]
result <- lapply(models,coef)
result[[1]]
result[[2]]
result <- sapply(models,coef)             # 提取参数
View(result)
result <- lapply(models,coef)             # 组合参数
do.call('rbind',result)
models <- sapply(pieces,model)            # 每个品种应用回归模型，得到3组参数
View(models)
sapply(models,coef)
models <- lapply(pieces,model)            # 每个品种应用回归模型，得到3组参数
sapply(models,coef)             # 组合参数
result1 <- dlply(iris,.(Species),model)
result1
result1 <- dlply(iris,.(Species),model)
result1
dlply(iris,.(Species),model)
replicate(20,mean(runif(100)))
rdply(20, mean(runif(100)))
mapply(rnorm,mean=1:5,sd=1:5, n=2)
mdply(data.frame(mean = 1:5, sd = 1:5), rnorm, n = 2)
require(devtools)
install_github("slidify")
install_github("slidify", "ramnathv")
setwd("~/workspace/git/r_workspace/slidify_learn")
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
install_github('ramnathv/slidify')
library(devtools)
install_github('ramnathv/slidify')
install.packages("httr")
install.packages("httr")
install.packages("httr")
install.packages(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("~/Desktop/httr_1.0.0.tgz", repos = NULL)
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("devtools")
install.packages("~/Desktop/devtools_1.9.1.tgz", repos = NULL)
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
library(slidify)
setwd("~/workspace/git/r_workspace/slidify_learn")
author("mydeck")
